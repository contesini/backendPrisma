
enum UserStatus {
  VALIDATED
  PENDING
  INVALIDATE
}

type User {
    id: ID! @id @unique
    name: String!
    surname: String!
    cpf: String
    rg: String
    numeroCarteiraDeTrabalho: String
    pis: String
    streetAddress: String
    addressNumber: String
    complement: String
    neighborhood: String
    city: String
    state: String
    email: String! @unique
    documentPhoto: String
    status: UserStatus @default(value: PENDING)
    petitions: [Petition!]! @relation(name: "UserPetitions") @scalarList(strategy: RELATION)
    password: String!
    phone: String
    resetsPassword: [ResetPassword!]! @relation(name: "UserRequestResetPassword")  @scalarList(strategy: RELATION)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}  

type Petition {
  id: ID! @id @unique
  title: String
  user: User! @relation(name: "UserPetitions")
  questions: [String!]! @scalarList(strategy: RELATION) @rename(oldName: "metadate")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}


type ResetPassword {
  id: ID! @id @unique
  user: User! @relation(name: "UserRequestResetPassword")
  isExpired: Boolean!   
}
